#!/bin/bash

s_arg=$2

help(){
  echo -e "Usage: totp-cli [OPTION]...\n\nOptions
  \033[32mhelp\033[0m                 show this message
  \033[32minit\033[0m                 initialize the config file
  \033[32mgenerate <account>\033[0m   generate a tokan
  \033[32mnew <account>\033[0m        create new account
  \033[32mremove <account>\033[0m     to remove a specific account"
  exit
}
init(){
  if [ -e ~/.local/share/totp-cli/config ]; then
    printf "\033[31mError:\033[0m config file already exists\n"
    exit
  fi

  [ -e ~/.local/share/totp-cli ] || mkdir ~/.local/share/totp-cli
  read -p "GPG Key ID:" GPG_KEY_ID
  echo "GPG_KEY_ID=$GPG_KEY_ID" > ~/.local/share/totp-cli/config
}
new(){
  [[ $s_arg == "" ]] && help
  if [ -e ~/.local/share/totp-cli/$s_arg ]; then
    printf "\033[31mError:\033[0m key exist\n"
    exit 1;
  fi
  read -p "secret key: " key
  if [[ $key == "" ]]; then
    echo `pwgen -1 16` | base32 | gpg -e -r $GPG_KEY_ID  > ~/.local/share/totp-cli/$s_arg
  else
    echo $key | gpg -e -r $GPG_KEY_ID  > ~/.local/share/totp-cli/$s_arg
  fi
  [ $? == 0 ] && echo key got generated
}
generate(){
  [[ $s_arg == "" ]] && help
  key=`gpg -d ~/.local/share/totp-cli/$s_arg 2> /dev/null |cut -f 1 -d ' '`
  [[ $? != "0" ]] && exit
  oathtool --totp -b -d 6 $key
}
remove(){
  [[ $s_arg == "" ]] && help
  read -p "Are you sure you want to remove this account? [N/y] " confirmation
  confirmation=`echo $confirmation | tr "[:upper:]" "[:lower:]"`
  if [[ $confirmation == "y" || $confirmation == "yes" ]]; then
    rm ~/.local/share/totp-cli/$s_arg
  fi
}
if [ ! -e ~/.local/share/totp-cli/config ]; then
  init
  exit
else
  source ~/.local/share/totp-cli/config
fi

case $1 in
  "init")
    init ;;
  "generate")
    generate ;;
  "new")
    new ;;
  "remove")
    remove ;;
  "help")
    help ;;
  *)
    help ;;
esac
